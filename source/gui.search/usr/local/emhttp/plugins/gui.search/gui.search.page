Menu='Buttons'
Link='nav-user'
---
<?
##############################################
#                                            #
# GUI Search copyright 2021, Andrew Zawadzki #
#           Licenced under GPLv2             #
#                                            #
##############################################
file_put_contents("/tmp/blah1",print_r($_SERVER,true));
if ( $theme == "black" || $theme == "white" ) {
	$currentUnraidPage = basename($_SERVER['REQUEST_URI']);
	$searchPages = array();
	$pageFiles = glob("/usr/local/emhttp/plugins/*/*.page");
	if ( basename($_SERVER['HTTP_REFERER']) == "Apps" || basename($_SERVER['HTTP_REFERER']) == "Plugins" || basename($_SERVER['HTTP_REFERER']) == "login" || basename($_SERVER['HTTP_REFERER']) = "logout") {
		@unlink("/tmp/gui.search/searchResults.json");
	} elseif ( is_file("/tmp/gui.search/searchResults.json") ) {
		$searchPages = unserialize(file_get_contents("/tmp/gui.search/searchResults.json"));
	}
	if ( ! $searchPages ) {
		$MainPages = array("About","WebGui","UNRAID-OS","SystemInformation","OtherSettings","Settings","NetworkServices","Utilities","UserPreferences");

		// pass 1 - get all the "main" pages
		foreach ($pageFiles as $page) {
			$file = explode("---",file_get_contents($page));
			$pageInfo = parse_ini_string($file[0],true);

			if ( in_array(explode(":",$pageInfo['Menu'])[0],$MainPages) && ! in_array(basename($page,".page"),$MainPages) ) {
				$newPage[basename($page,".page")] = array(sanitizeQuote($pageInfo['Title']),basename($page));
			}
		}

		//pass 2 - link back any sub-pages
		foreach ($pageFiles as $page) {
			$file = explode("---",file_get_contents($page));
			if ( ! $file[1] ) continue;
			$pageInfo = parse_ini_string($file[0],true);

			$pageLinked = explode(":",$pageInfo['Menu'])[0];
			if ($newPage[$pageLinked]  && ! in_array($pageLinked,$MainPages) ) {
				$newPage[] = array(sanitizeQuote($pageInfo['Title'])." ({$newPage[$pageLinked][0]})",$pageLinked);
			}
			getSettings();
		}
		//pass 3 - cleanup
		foreach ($newPage as $page) {
			if ( ! in_array(array("label"=>sanitizeQuote($page[0]),"value"=>basename($page[1],".page")),$searchPages) )
				$searchPages[] = array("label"=>sanitizeQuote($page[0]),"value"=>basename($page[1],".page"));
		}
		@mkdir("/tmp/gui.search");
		file_put_contents("/tmp/gui.search/searchResults.json",serialize($searchPages));
	}
}

function getSettings() {
	global $searchPages, $pageInfo, $page,$file;

	$bannedPages = array("UserEdit","Device","community.applications","Selftest","DeviceInfo","EthX","ca_settings","CA_Notices");
	if (in_array(basename($page,".page"),$bannedPages) ) return;
	foreach (explode("\n",$file[1]) as $line) {
		if ( preg_match("/^[_][(][[:print:]]+[)][_][:?]/m",$line) ) {
			$string = str_replace("_(","",$line);
			$string = str_replace(")_:","",$string);
			$string = str_replace(")_?","",$string);
			$string = sanitizeQuote($string);
			if ( ! in_array(array("label"=>"$string ({$pageInfo['Title']})","value"=>basename($page,".page")),$searchPages) )
				$searchPages[] = array("label"=>"$string ({$pageInfo['Title']})","value"=>basename($page,".page"));
		}
	}
}
function sanitizeQuote($string) {
	return str_replace("'","",str_replace('"',"",$string));
}
?>

<?if ( ($theme == "black" || $theme == "white") && $currentUnraidPage !== "Apps"):?>
<script src='<?autov("/plugins/community.applications/javascript/libraries.js")?>'></script>
<style>
.awesomplete [hidden] {display: none;}
.awesomplete .visually-hidden {position: absolute;clip: rect(0, 0, 0, 0);}
.awesomplete {display: inline-block;position: relative;color: red;}
.awesomplete > input {display: block;}
.awesomplete > ul {position: absolute;left: 0;z-index: 1;min-width: 100%;box-sizing: border-box;list-style: none;padding: 0;margin: 0;background: #fff;}
.awesomplete > ul:empty {display: none;}
.awesomplete > ul {border-radius: .3em;margin: .2em 0 0;background: hsla(0,0%,100%,.9);background: linear-gradient(to bottom right, white, hsla(0,0%,100%,.8));border: 1px solid rgba(0,0,0,.3);box-shadow: .05em .2em .6em rgba(0,0,0,.2);text-shadow: none;}
@supports (transform: scale(0)) {.awesomplete > ul {transition: .3s cubic-bezier(.4,.2,.5,1.4);transform-origin: 1.43em -.43em;}
	.awesomplete > ul[hidden],.awesomplete > ul:empty {opacity: 0;transform: scale(0);display: block;transition-timing-function: ease;}
}
/* Pointer */
.awesomplete > ul:before {content: "";position: absolute;top: -.43em;left: 1em;width: 0; height: 0;padding: .4em;background: white;border: inherit;border-right: 0;border-bottom: 0;-webkit-transform: rotate(45deg);transform: rotate(45deg);}
.awesomplete > ul > li {position: relative;padding: .2em .5em;cursor: pointer;}
.awesomplete > ul > li:hover {background: hsl(200, 40%, 80%);color: black;}
.awesomplete > ul > li[aria-selected="true"] {background: hsl(205, 40%, 40%);color: white;}
.awesomplete mark {background: hsl(65, 100%, 50%);}
.awesomplete li:hover mark {background: hsl(68, 100%, 41%);}
.awesomplete li[aria-selected="true"] mark {background: hsl(86, 100%, 21%);color: inherit;}
</style>
<?endif;?>
<?if ($theme == "black" || $theme == "white"):?>
<script>
$(function() {
		caPluginUpdateCheck("gui.search.plg",{
			name:"GUI Search"
		});
	if (typeof Awesomplete == 'function' ) {
		$("#nav-right").prepend("<span style='float:left'><input id='guiSearchBox' class='narrow' placeholder='Search' type='text'></input></span>");
		$("#nav-block").css("overflow","visible");
		var guiSearchAwesomplete;
		guiSearchBoxInput = document.getElementById("guiSearchBox");
		guiSearchAwesomplete = new Awesomplete(guiSearchBoxInput);

		var guiSearchSuggestions = JSON.parse('<?=json_encode($searchPages)?>');
		guiSearchAwesomplete.list = guiSearchSuggestions;
		guiSearchAwesomplete.maxItems = 15;
		Awesomplete.$('#guiSearchBox').removeEventListener('awesomplete-selectcomplete',guiSearch);
		Awesomplete.$('#guiSearchBox').addEventListener('awesomplete-selectcomplete',guiSearch);
		$("#guiSearchBox").next().css("width","450px");
	}
<?if ( $currentUnraidPage !== "Apps" ):?>
	$("#guiSearchBox").focus();
<?endif;?>
});
function guiSearch() {
	var page = $("#guiSearchBox").val();
	location.replace("/"+page);
}
</script>
<?endif;?>